name: Docker Build and Push

on:
  push:
    tags:
      - 'v*'   # Déclenche le workflow pour les tags commençant par 'v'

    branches:
      - 'develop'     # Déclenchement sur la branche 'develop'


jobs:
  docker-build:
    runs-on: ubuntu-latest


    steps:
      # Étape 1 : Checkout du code avec les sous-modules
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true  # Assure que les sous-modules sont également clonés
          repository: xpdemon/azerothcore-wotlk
          ref: ${{ github.ref }}
          fetch-depth: 0  # Assurez-vous de récupérer tous les tags

      # Étape 2 : Connexion à Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PAT }}

      # Étape 3 : Configurer Docker Buildx avec le pilote docker-container
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container  # Utilisation du pilote docker-container
          install: true


      # Étape 4 : Construire les images avec Docker Compose
      - name: Build Docker Compose services
        run: docker compose -f docker-compose.override.yml build

      # Étape 5 : Pousser les images vers Docker Hub
      - name: Push Docker Compose services
        if: startsWith(github.ref, 'refs/tags/')
        run: docker compose -f docker-compose.override.yml push

      # Étape 6 : Créer une Pull Request vers master si sur develop
      - name: Create Pull Request to master
        # Condition : seulement si on est sur la branche develop ET si les étapes précédentes ont réussi
        if: github.ref == 'refs/heads/develop' && success()
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

          # Paramètres de la PR
          title: "Merge develop into master"
          body: |
            **Automated PR** pour fusionner les changements de `develop` dans `master`.
          base: "master"

          # Nom de la branche locale intermédiaire
          branch: "auto-develop-to-master"


      # Optionnel : Nettoyer le cache Buildx
      - name: Cleanup Buildx
        if: always()
        run: docker buildx prune --force
