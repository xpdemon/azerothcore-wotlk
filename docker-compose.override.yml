
# docker-compose.yml for AzerothCore.
#
# Start the server with `docker compose up -d --build`
#
# Don't make changes this file! make a `docker-compose.override.yml` and make your
# changes there instead.

services:
  ac-database:
    container_name: ac-database
    image: mysql:8.3
    networks:
      - ac-network
    ports:
      - ${DOCKER_DB_EXTERNAL_PORT:-3306}:3306
    environment:
      - MYSQL_ROOT_PASSWORD=${DOCKER_DB_ROOT_PASSWORD:-password}
    volumes:
      - type: volume
        source: ac-database
        target: /var/lib/mysql
    restart: unless-stopped
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=$$MYSQL_ROOT_PASSWORD --execute \"SHOW DATABASES;\""
      interval: 5s
      timeout: 10s
      retries: 40

  ac-db-import:
    container_name: ac-db-import

    image: xpdemon/ac-wotlk-db-import:1.0.3
    networks:
      - ac-network
    build:
      platforms:
        - linux/amd64
      context: .
      target: db-import
      dockerfile: apps/docker/Dockerfile
      args:
        USER_ID: ${DOCKER_USER_ID:-1000}
        GROUP_ID: ${DOCKER_GROUP_ID:-1000}
        DOCKER_USER: ${DOCKER_USER:-acore}
    environment:
      AC_DATA_DIR: "/azerothcore/env/dist/data"
      AC_LOGS_DIR: "/azerothcore/env/dist/logs"
      AC_LOGIN_DATABASE_INFO: "ac-database;3306;root;${DOCKER_DB_ROOT_PASSWORD:-password};acore_auth"
      AC_WORLD_DATABASE_INFO: "ac-database;3306;root;${DOCKER_DB_ROOT_PASSWORD:-password};acore_world"
      AC_CHARACTER_DATABASE_INFO: "ac-database;3306;root;${DOCKER_DB_ROOT_PASSWORD:-password};acore_characters"
    volumes:
      - /mnt/user/appdata/azerothcore/etc:/azerothcore/env/dist/etc
      # [osxfs optimization]: https://stackoverflow.com/a/63437557/1964544
      - /mnt/user/appdata/azerothcore/log:/azerothcore/env/dist/logs:delegated
    depends_on:
      ac-database:
        condition: service_healthy

  ac-worldserver:
    container_name: ac-worldserver
    image: xpdemon/ac-wotlk-worldserver:1.0.3
    build:
      platforms:
        - linux/amd64
      context: .
      target: worldserver
      dockerfile: apps/docker/Dockerfile
      args:
        USER_ID: ${DOCKER_USER_ID:-1000}
        GROUP_ID: ${DOCKER_GROUP_ID:-1000}
        DOCKER_USER: ${DOCKER_USER:-acore}
    networks:
      - ac-network
    stdin_open: true
    tty: true
    restart: unless-stopped
    env_file:
      ${DOCKER_AC_ENV_FILE:-conf/dist/env.ac}
    environment:
      AC_DATA_DIR: "/azerothcore/env/dist/data"
      AC_LOGS_DIR: "/azerothcore/env/dist/logs"
      AC_LOGIN_DATABASE_INFO: "ac-database;3306;root;${DOCKER_DB_ROOT_PASSWORD:-password};acore_auth"
      AC_WORLD_DATABASE_INFO: "ac-database;3306;root;${DOCKER_DB_ROOT_PASSWORD:-password};acore_world"
      AC_CHARACTER_DATABASE_INFO: "ac-database;3306;root;${DOCKER_DB_ROOT_PASSWORD:-password};acore_characters"
      AC_PLAYERBOTS_DATABASE_INFO: "ac-database;3306;root;${DOCKER_DB_ROOT_PASSWORD:-password};acore_playerbots"
    ports:
      - ${DOCKER_WORLD_EXTERNAL_PORT:-8085}:8085
      - ${DOCKER_SOAP_EXTERNAL_PORT:-7878}:7878
    volumes:
      - /mnt/user/appdata/azerothcore/etc:/azerothcore/env/dist/etc
      # [osxfs optimization]: https://stackoverflow.com/a/63437557/1964544
      - /mnt/user/appdata/azerothcore/log:/azerothcore/env/dist/logs:delegated
      # client data
      - ac-client-data2:/azerothcore/env/dist/data/:ro
    depends_on:
      ac-database:
        condition: service_healthy
      ac-db-import:
        condition: service_completed_successfully
      ac-client-data-init:
        condition: service_completed_successfully

  ac-authserver:
    container_name: ac-authserver
    image: xpdemon/ac-wotlk-authserver:1.0.3
    build:
      platforms:
        - linux/amd64
      context: .
      target: authserver
      dockerfile: apps/docker/Dockerfile
      args:
        USER_ID: ${DOCKER_USER_ID:-1000}
        GROUP_ID: ${DOCKER_GROUP_ID:-1000}
        DOCKER_USER: ${DOCKER_USER:-acore}
    networks:
      - ac-network
    tty: true
    restart: unless-stopped
    env_file:
      ${DOCKER_AC_ENV_FILE:-conf/dist/env.ac}
    environment:
      AC_LOGS_DIR: "/azerothcore/env/dist/logs"
      AC_TEMP_DIR: "/azerothcore/env/dist/temp"
      AC_LOGIN_DATABASE_INFO: "ac-database;3306;root;${DOCKER_DB_ROOT_PASSWORD:-password};acore_auth"
    volumes:
      - /mnt/user/appdata/azerothcore/etc:/azerothcore/env/dist/etc
      # [osxfs optimization]: https://stackoverflow.com/a/63437557/1964544
      - /mnt/user/appdata/azerothcore/log:/azerothcore/env/dist/logs:delegated
    ports:
      - ${DOCKER_AUTH_EXTERNAL_PORT:-3724}:3724
    depends_on:
      ac-database:
        condition: service_healthy
      ac-db-import:
        condition: service_completed_successfully

  ac-client-data-init:
    container_name: ac-client-data-init
    image: xpdemon/ac-wotlk-client-data:1.0.3
    build:
      platforms:
        - linux/amd64
      context: .
      target: client-data
      dockerfile: apps/docker/Dockerfile
      args:
        USER_ID: ${DOCKER_USER_ID:-1000}
        GROUP_ID: ${DOCKER_GROUP_ID:-1000}
        DOCKER_USER: ${DOCKER_USER:-acore}
    volumes:
      - ac-client-data2:/azerothcore/env/dist/data

  ac-db-dump:
    restart: always
    networks:
      - ac-network
    container_name: db-auto-dump
    image: databack/mysql-backup:latest
    volumes:
      - ac-database-dump:/db
    environment:
      DB_DUMP_TARGET: /db
      DB_USER : root
      DB_PASS : password
      DB_DUMP_FREQUENCY : 60
      DB_SERVER : ac-database
      DB_PORT : 3306
    command:
      - dump

volumes:
  ac-database-dump:
    driver: local
    driver_opts:
      type: none
      device: "/mnt/user/appdata/azerothcore/db-backup"
      o: bind
  ac-database:
    driver: local
    driver_opts:
      type: none
      device: "/mnt/user/appdata/azerothcore/ac-database"
      o: bind
  ac-client-data2:
    driver: local
    driver_opts:
      type: none
      device: "/mnt/user/appdata/azerothcore/ac-client-data"
      o: bind
  # Used for dev server
  ac-build-dev:
  ac-ccache-dev:

networks:
  ac-network:
